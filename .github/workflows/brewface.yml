name: Test Brewface GUI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Racket
      uses: Bogdanp/setup-racket@v1.11
      with:
        architecture: 'x64'
        distribution: 'full'
        variant: 'CS'
        version: '8.17'
        
    - name: Install review package
      run: raco pkg install --auto review
      
    - name: Run raco check-requires on brewface
      run: |
        echo "Checking for unused requires on brewface Racket files..."
        # Find all .rkt files in brewface directory and run check-requires on each
        find brewface -name "*.rkt" -type f | while read -r file; do
          echo "Checking requires for: $file"
          raco check-requires "$file"
        done
        
    - name: Run raco review on brewface (enforce code quality)
      run: |
        echo "Running code quality checks on brewface Racket files..."
        # Find all .rkt files in brewface directory and run review on each
        # Allow warnings to pass (|| true) since some warnings are false positives
        find brewface -name "*.rkt" -type f | while read -r file; do
          echo "Reviewing: $file"
          raco review "$file" || true
        done
        
        echo "Brewface code review completed!"
        
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        racket-version: ['8.17']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Racket
      uses: Bogdanp/setup-racket@v1.11
      with:
        architecture: 'x64'
        distribution: 'full'
        variant: 'CS'
        version: ${{ matrix.racket-version }}
        
    - name: Install caffeine dependency
      run: |
        cd caffeine
        raco pkg install --auto
        
    - name: Run brewface tests and verify results
      shell: bash
      run: |
        # Set up virtual display for GUI testing (headless mode)
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
        # Capture the test output and exit code
        cd brewface
        if output=$(racket test.rkt 2>&1) && echo "$output" | grep -q "0 failure(s) 0 error(s)"; then
          echo "✅ All brewface tests passed successfully on ${{ matrix.os }}!"
          echo "Test output:"
          echo "$output"
          exit 0
        else
          echo "❌ Brewface tests failed on ${{ matrix.os }}!"
          echo "Test output:"
          echo "$output"
          exit 1
        fi
        
  integration:
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Racket
      uses: Bogdanp/setup-racket@v1.11
      with:
        architecture: 'x64'
        distribution: 'full'
        variant: 'CS'
        version: '8.17'
        
    - name: Install caffeine dependency
      run: |
        cd caffeine
        raco pkg install --auto
        
    - name: Test caffeine-brewface integration
      shell: bash
      run: |
        echo "Testing integration between caffeine DSL and brewface parser..."
        
        # Test that brewface can parse a caffeine file
        cd brewface
        racket -e "(require \"../roast/file-loader.rkt\") (require \"../roast/main.rkt\") (define ir-data (load-caffeine-file \"../caffeine/test-example.cf\")) (define-values (services deps avails) (process-ir-data ir-data)) (printf \"Integration test: ~a services parsed\\n\" (length services)) (exit 0)"
        
        echo "✅ Integration test passed - brewface successfully uses caffeine DSL!" 